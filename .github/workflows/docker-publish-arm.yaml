name: Docker publish ARM

on:
  schedule:
    - cron: '00 0 * * *'
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'Dockerfile'
      - 'Dockerfile.rootless'
      - '.dockerignore'
      - '.github/workflows'
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'Dockerfile'
      - 'Dockerfile.rootless'
      - '.dockerignore'
      - '.github/workflows'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
        with:
          driver: docker-container  # Use remote driver for parallel builds and improved performance
          buildkitd-flags: --allow-insecure-entitlements security  # Enable required security entitlements for remote driver

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}  # Tag based on version
            type=semver,pattern={{major}}.{{minor}}  # Tag based on major and minor versions
            type=schedule,pattern=nightly  # Add nightly builds for scheduled builds

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/arm/v7  # Build for both ARM64 and ARMv7 architectures
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache  # Use registry-based caching for better cross-platform support
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache  # Store the cache in the registry for faster builds
          build-args: |
            VERSION=${{ github.ref_name }}  # Pass version as a build argument
            COMMIT=${{ github.sha }}  # Pass commit SHA as a build argument
        
      # Attest the built image to prove build provenance
      # https://github.com/actions/attest-build-provenance
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        if: ${{ github.event_name != 'pull_request' }}
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true  # Push the attestation to the registry
